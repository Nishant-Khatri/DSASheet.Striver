class Solution {
    public void swap(int[] nums,int i,int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    public void helper(List<List<Integer>> ans,int[] nums,int ind){
        if(ind==nums.length)
        {
            List<Integer> temp=new ArrayList<>();
            for(int i=0;i<nums.length;i++)
            {
                temp.add(nums[i]);
            }
            ans.add((temp));
        }
        for(int i=ind;i<nums.length;i++)
        {
                swap(nums,ind,i);
                helper(ans,nums,ind+1);
                //backtrack
                swap(nums,ind,i);
        }


        }
        
    
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        helper(ans,nums,0);
        return ans;
    }
}
