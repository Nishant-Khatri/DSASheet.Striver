class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int l1=nums1.length;
        int l2=nums2.length;
        if(l1>l2) return findMedianSortedArrays(nums2,nums1);
        int low=0;
        int high=l1;
        while(low<=high)
        {
            int c1=((high-low)/2)+low;
            int c2=(l1+l2+1)/2-c1;

            int left1= c1 == 0 ? Integer.MIN_VALUE : nums1[c1-1];
            int left2= c2 == 0 ? Integer.MIN_VALUE : nums2[c2-1];
      
            int right1= c1 == l1 ? Integer.MAX_VALUE : nums1[c1];
            int right2= c2 == l2 ? Integer.MAX_VALUE : nums2[c2];
            if(left1 <= right2 && left2 <= right1)
            {
            //     System.out.println(" LEFT1  "+left1+" LEFT2  "+left2+" R1 "+right1+" R2 "+right2+" Executed RETURN");
                if( (l1+l2) % 2==0)
                {
                    return (Math.max(left1,left2) + Math.min(right1,right2))/2.0;
                }
                else return Math.max(left1,left2);
            }
            else if(left1 > right2)
            {
                System.out.println("Executed");
                high=c1-1;
            }
           else
           { 
                // System.out.println(" LEFT1  "+left1+" LEFT2  "+left2+" R1 "+right1+" R2 "+right2+" Executed 2");
               low=c1+1;
           }
        }
        return 0.0;
    }
}
