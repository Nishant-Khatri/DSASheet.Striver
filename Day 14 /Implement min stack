class MinStack {
    Stack<Long> s1;
    Long min; 
    public MinStack() {
        s1=new Stack<Long>();
        min=Long.MAX_VALUE;

    }
 
    public void push(int val) {
        Long v=Long.valueOf(val);
        if(s1.isEmpty()){
            s1.push(v);
            min=v;
            
        }
   else if(v<min){
        s1.push(2*v-min);
        min=v;
    }
    else{
        s1.push(v);
    }
    }
    
    public void pop() {
        if(s1.isEmpty()) return;
        Long val=s1.pop();
        if(val<min){
            min=2*min-val;
        }            
            }
    
    public int top() { 
        Long val=s1.peek();
        
        if(val<min){
            return  min.intValue();
        }
       else return val.intValue();        
    }
    
    public int getMin() {
        return min.intValue();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
