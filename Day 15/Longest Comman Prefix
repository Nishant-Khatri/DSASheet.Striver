class Solution {
    class TrieNode{
        boolean isEnd;
        int childcount;
        TrieNode children[]=new TrieNode[26];
        TrieNode(){

            childcount=0;
            isEnd=false;
            for(int i=0;i<26;i++)
            children[i]=null;   
        }
    }
    class Trie{
        TrieNode root;
        Trie(){
            root=new TrieNode();
        }
        void insert(String word){
            TrieNode curr=root;
            for(char ch : word.toCharArray()){
            if(curr.children[ch-'a']==null){
                
                TrieNode f=new TrieNode();
                curr.children[ch-'a']=f;
                curr.childcount++;
            }
            curr=curr.children[ch-'a'];
            }
            curr.isEnd=true;
        }


    }
    public String longestCommonPrefix(String[] strs) {
        String ans="";
        Trie t=new Trie();
        for(String word: strs){
            if(word.length()==0) return "";
            t.insert(word);
        }
        for(int i=0;i<strs[0].length();i++){
            char ch=strs[0].charAt(i);
            if(t.root.childcount==1)
            {
                ans+=ch;
                t.root=t.root.children[ch-'a'];
            }
            else break;
            if(t.root.isEnd) break;
            }
        return ans;

        
    }
}
