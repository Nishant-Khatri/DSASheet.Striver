class GfG
{
    Node merge2(Node l1,Node l2)
    {
      
        Node temp=new Node(0);
         Node res=temp;
        while(l1!=null && l2!=null)
        {
            if(l1.data<l2.data)
            {
                temp.bottom=l1;
                temp=l1;
                l1=l1.bottom;
            }
            else
            {
                temp.bottom=l2;
                temp=l2;
                l2=l2.bottom;
            }
        }
        // if(l1!=null) temp.bottom=l1;
        // else temp.bottom=l2;
        while(l1!=null)
        {
            temp.bottom=l1;
            temp=l1;
            l1=l1.bottom;
        }
    while(l2!=null)
        {
            temp.bottom=l2;
            temp=l2;
            l2=l2.bottom;
        }    
        return res.bottom;
    }
    Node flatten(Node root)
    {
        if(root==null||root.next==null ) 
        {
            return root;
        }
    root.next=flatten(root.next);
    root=merge2(root,root.next);
    return root;
	
    }
}
